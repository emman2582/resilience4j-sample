apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: resilience4j-alb-ingress
  namespace: resilience4j-multi
  labels:
    app: resilience4j
    environment: multi
  annotations:
    # ALB Configuration
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: resilience4j-alb-multi
    
    # Health Check Configuration
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    # SSL and Security
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    
    # Target Group Attributes for High Availability
    alb.ingress.kubernetes.io/target-group-attributes: |
      stickiness.enabled=false,
      deregistration_delay.timeout_seconds=30,
      load_balancing.algorithm.type=round_robin,
      stickiness.type=lb_cookie,
      stickiness.lb_cookie.duration_seconds=86400
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      # Grafana - Higher priority path
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
      # Prometheus metrics (for monitoring)
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090
      # Service A - Default catch-all (lowest priority)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: service-a
            port:
              number: 8080
---
# Network Policy to restrict direct pod access (optional security enhancement)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: resilience4j-network-policy
  namespace: resilience4j-multi
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from ALB
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  # Allow inter-pod communication within namespace
  - from:
    - podSelector: {}
  # Allow traffic from other namespaces (for monitoring)
  - from:
    - namespaceSelector: {}
  egress:
  # Allow all outbound traffic
  - {}