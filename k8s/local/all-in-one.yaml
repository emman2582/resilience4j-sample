apiVersion: v1
kind: Namespace
metadata:
  name: resilience4j-local
  labels:
    environment: local
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: resilience4j-local
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'service-a'
        static_configs:
          - targets: ['service-a:8080']
      - job_name: 'service-b'
        static_configs:
          - targets: ['service-b:8081']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-a
  namespace: resilience4j-local
spec:
  replicas: 2
  selector:
    matchLabels:
      app: service-a
  template:
    metadata:
      labels:
        app: service-a
    spec:
      containers:
      - name: service-a
        image: r4j-sample-service-a:0.1.0
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: B_URL
          value: "http://service-b:8081"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-b
  namespace: resilience4j-local
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-b
  template:
    metadata:
      labels:
        app: service-b
    spec:
      containers:
      - name: service-b
        image: r4j-sample-service-b:0.1.0
        imagePullPolicy: Never
        ports:
        - containerPort: 8081
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: resilience4j-local
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.54.1
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
      volumes:
      - name: config
        configMap:
          name: prometheus-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: resilience4j-local
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:11.2.0
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
---
apiVersion: v1
kind: Service
metadata:
  name: service-a
  namespace: resilience4j-local
  labels:
    app: service-a
spec:
  type: ClusterIP
  selector:
    app: service-a
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: service-b
  namespace: resilience4j-local
  labels:
    app: service-b
spec:
  type: ClusterIP
  selector:
    app: service-b
  ports:
  - name: http
    port: 8081
    targetPort: 8081
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: resilience4j-local
  labels:
    app: prometheus
spec:
  type: ClusterIP
  selector:
    app: prometheus
  ports:
  - name: http
    port: 9090
    targetPort: 9090
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: resilience4j-local
  labels:
    app: grafana
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP