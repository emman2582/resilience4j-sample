{{- if .Values.otelCollector.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.otelCollector.name }}-config
  labels:
    app: {{ .Values.otelCollector.name }}
data:
  otel-collector-config.yml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:{{ .Values.otelCollector.service.ports.otlpHttp }}
      prometheus:
        config:
          scrape_configs:
            - job_name: 'service-a'
              static_configs:
                - targets: ['{{ .Values.serviceA.name }}:{{ .Values.serviceA.service.port }}']
              metrics_path: '/actuator/prometheus'
              scrape_interval: 5s
            - job_name: 'service-b'
              static_configs:
                - targets: ['{{ .Values.serviceB.name }}:{{ .Values.serviceB.service.port }}']
              metrics_path: '/actuator/prometheus'
              scrape_interval: 5s

    exporters:
      prometheus:
        endpoint: "0.0.0.0:{{ .Values.otelCollector.service.ports.prometheusMetrics }}"
      debug:
        verbosity: detailed

    service:
      pipelines:
        metrics:
          receivers: [otlp, prometheus]
          exporters: [prometheus, debug]
        traces:
          receivers: [otlp]
          exporters: [debug]
{{- end }}