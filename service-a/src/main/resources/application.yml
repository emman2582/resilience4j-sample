server:
  port: 8080

b:
  url: ${B_URL:http://localhost:8081}

logging:
  level:
    root: INFO
    com.example.a: INFO
    io.github.resilience4j: DEBUG
  config: classpath:logback-spring.xml

management:
  endpoints:
    web:
      exposure:
        include: [health, info, metrics, prometheus]
  metrics:
    web:
      server:
        request:
          autotime:
            enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      slo:
        http.server.requests: 10ms,50ms,100ms,200ms,500ms,1s,2s,5s
    export:
      prometheus:
        enabled: true
        histogram-flavor: prometheus
  tracing:
    sampling:
      probability: 1.0



resilience4j:
  circuitbreaker:
    instances:
      backendB:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 6
        minimumNumberOfCalls: 3
        failureRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
      timeoutBreaker:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 4
        minimumNumberOfCalls: 2
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 3s
  retry:
    instances:
      backendB:
        maxAttempts: 3
        waitDuration: 200ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2.0
        retryExceptions:
          - java.io.IOException
          - org.springframework.web.client.ResourceAccessException
          - org.springframework.web.client.HttpServerErrorException
        ignoreExceptions:
          - io.github.resilience4j.circuitbreaker.CallNotPermittedException
  ratelimiter:
    instances:
      backendB:
        limitForPeriod: 5
        limitRefreshPeriod: 1s
        timeoutDuration: 1s
  timelimiter:
    instances:
      timelimiterB:
        timeoutDuration: 2s
        cancelRunningFuture: true
  bulkhead:
    instances:
      bhX:
        type: SEMAPHORE
        maxConcurrentCalls: 2
        maxWaitDuration: 100ms
      bhY:
        type: SEMAPHORE
        maxConcurrentCalls: 1
        maxWaitDuration: 100ms
  metrics:
    enabled: true
    export:
      prometheus:
        enabled: true
